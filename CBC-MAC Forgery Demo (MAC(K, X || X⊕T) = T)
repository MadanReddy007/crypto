from Crypto.Cipher import AES
from Crypto.Util.Padding import pad

def xor_bytes(a, b):
    return bytes(x ^ y for x, y in zip(a, b))

def cbc_mac(key, msg):
    cipher = AES.new(key, AES.MODE_CBC, iv=bytes(16))
    ciphertext = cipher.encrypt(pad(msg, 16))
    return ciphertext[-16:]  # CBC-MAC = last block

key = b"thisisakey123456"
X = b"BlockMessage1234"
T = cbc_mac(key, X)
forged = X + xor_bytes(X, T)
T_forged = cbc_mac(key, forged)
print("Original MAC:", T.hex())
print("Forged MAC :", T_forged.hex())  # Should match
